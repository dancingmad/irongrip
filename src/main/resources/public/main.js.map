{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/noty/noty.component.css","webpack:///./src/app/components/noty/noty.component.html","webpack:///./src/app/components/noty/noty.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/training/statistics/statistics.component.css","webpack:///./src/app/components/training/statistics/statistics.component.html","webpack:///./src/app/components/training/statistics/statistics.component.ts","webpack:///./src/app/components/training/training/training.component.css","webpack:///./src/app/components/training/training/training.component.html","webpack:///./src/app/components/training/training/training.component.ts","webpack:///./src/app/components/training/trainingconfig/staricon.component.ts","webpack:///./src/app/components/training/trainingconfig/trainingconfig.component.css","webpack:///./src/app/components/training/trainingconfig/trainingconfig.component.html","webpack:///./src/app/components/training/trainingconfig/trainingconfig.component.ts","webpack:///./src/app/components/training/trainingresult/aggregatedTrainingResult.ts","webpack:///./src/app/components/training/trainingresult/trainingresult.component.css","webpack:///./src/app/components/training/trainingresult/trainingresult.component.html","webpack:///./src/app/components/training/trainingresult/trainingresult.component.ts","webpack:///./src/app/components/translation/course/course.component.css","webpack:///./src/app/components/translation/course/course.component.html","webpack:///./src/app/components/translation/course/course.component.ts","webpack:///./src/app/components/translation/coursepicker/coursepicker.component.css","webpack:///./src/app/components/translation/coursepicker/coursepicker.component.html","webpack:///./src/app/components/translation/coursepicker/coursepicker.component.ts","webpack:///./src/app/components/translation/home/home.component.css","webpack:///./src/app/components/translation/home/home.component.html","webpack:///./src/app/components/translation/home/home.component.ts","webpack:///./src/app/components/translation/translationentry/translationentry.component.css","webpack:///./src/app/components/translation/translationentry/translationentry.component.html","webpack:///./src/app/components/translation/translationentry/translationentry.component.ts","webpack:///./src/app/components/translation/translations/filter-language.pipe.ts","webpack:///./src/app/components/translation/translations/translations.component.css","webpack:///./src/app/components/translation/translations/translations.component.html","webpack:///./src/app/components/translation/translations/translations.component.ts","webpack:///./src/app/services/noty.service.ts","webpack:///./src/app/services/noty.ts","webpack:///./src/app/services/training/model/trainingresult.ts","webpack:///./src/app/services/training/training.service.ts","webpack:///./src/app/services/training/translationstatistics.service.ts","webpack:///./src/app/services/translation/model/chapter.ts","webpack:///./src/app/services/translation/model/course.ts","webpack:///./src/app/services/translation/model/coursepick.ts","webpack:///./src/app/services/translation/model/translation.ts","webpack:///./src/app/services/translation/translation.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TranslationsComponent} from '../components/translation/translations/translations.component';\nimport {HomeComponent} from '../components/translation/home/home.component';\nimport {ProfileComponent} from '../components/profile/profile.component';\nimport {CourseComponent} from '../components/translation/course/course.component';\n\nimport {TrainingComponent} from '../components/training/training/training.component';\nimport {StatisticsComponent} from '../components/training/statistics/statistics.component';\nimport {TrainingconfigComponent} from '../components/training/trainingconfig/trainingconfig.component';\n\nconst routes: Routes = [\n    { path: 'home', component: HomeComponent },\n    { path: 'profile', component: ProfileComponent },\n    { path: 'translations', component: TranslationsComponent },\n    { path: 'course/:id', component: CourseComponent },\n    { path: 'config', component: TrainingconfigComponent },\n    { path: 'training/:id', component: TrainingComponent },\n    { path: 'statistics', component: StatisticsComponent },\n    { path: '', redirectTo: '/translations', pathMatch: 'full'}\n  ]\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-5\\\">\\n    </div>\\n    <div class=\\\"col-7\\\">\\n      <app-noty></app-noty>\\n    </div>\\n  </div>\\n    <div class=\\\"row shadow-sm headline\\\">\\n      <div class=\\\"col-4 m-2 text-left\\\"><h1>{{ 'application.title' | translate }}</h1></div>\\n      <div class=\\\"col m-2 text-right\\\"></div>\\n      <div class=\\\"col-2 m-2 text-right\\\">\\n        <div *ngIf=\\\"user\\\" class=\\\"btn-group\\\" dropdown>\\n          <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle material-icons\\\"\\n                  aria-controls=\\\"dropdown-basic\\\">person<span class=\\\"caret\\\"></span>\\n          </button>\\n          <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu\\\"\\n              role=\\\"menu\\\" aria-labelledby=\\\"button-basic\\\">\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" routerLink=\\\"/profile\\\">Profile</a></li>\\n            <li class=\\\"divider dropdown-divider\\\"></li>\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a></li>\\n          </ul>\\n          </div>\\n        </div>\\n    </div>\\n  <div class=\\\"row d-lg-none mt-2 shadow-sm p-2\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <a routerLink=\\\"/home\\\" title=\\\"Home\\\" class=\\\"btn btn-outline-dark material-icons\\\">home</a>\\n      <a routerLink=\\\"/translations\\\" title=\\\"Translations\\\" class=\\\"btn btn-outline-dark material-icons\\\">library_books</a>\\n    </div>\\n  </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-1 mt-2 d-none d-lg-block\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <a routerLink=\\\"/home\\\" title=\\\"Home\\\" class=\\\"btn btn-lg btn-outline-dark material-icons\\\">home</a>\\n          </div>\\n        </div>\\n        <div class=\\\"row mt-2\\\">\\n          <div class=\\\"col\\\">\\n            <a routerLink=\\\"/translations\\\" title=\\\"Translations\\\" class=\\\"btn btn-lg btn-outline-dark material-icons\\\">library_books</a>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col mt-2 pb-4 shadow-sm\\\">\\n          <app-login *ngIf=\\\"!user\\\"></app-login>\\n          <router-outlet *ngIf=\\\"user\\\"></router-outlet>\\n      </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport {UserService} from './services/user.service';\nimport {User} from './services/user';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  user: User;\n\n  constructor(private userService: UserService,\n              private translate: TranslateService,\n              private route: ActivatedRoute,\n              private location: Location) {\n    this.fetchUser();\n    translate.setDefaultLang('ENGLISH');\n  }\n\n  fetchUser() {\n    this.userService.getLoggedInUser().subscribe(user => {\n      this.user = user;\n      this.translate.use(user.language || 'ENGLISH');\n    });\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n\n  openProfile() {\n    this.location.go('/profile');\n  }\n\n}\n","\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing/app-routing.module';\n\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { TranslationsComponent } from './components/translation/translations/translations.component';\nimport { NotyComponent } from './components/noty/noty.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { HomeComponent } from './components/translation/home/home.component';\nimport { CourseComponent } from './components/translation/course/course.component';\nimport { TranslationentryComponent } from './components/translation/translationentry/translationentry.component';\nimport {FilterLanguagePipe} from './components/translation/translations/filter-language.pipe';\nimport {BsDropdownModule, ProgressbarModule, TypeaheadModule} from 'ngx-bootstrap';\nimport { TrainingconfigComponent } from './components/training/trainingconfig/trainingconfig.component';\nimport { TrainingComponent } from './components/training/training/training.component';\nimport { StatisticsComponent } from './components/training/statistics/statistics.component';\nimport { CoursepickerComponent } from './components/translation/coursepicker/coursepicker.component';\nimport { TrainingresultComponent } from './components/training/trainingresult/trainingresult.component';\nimport {StarIconComponent} from './components/training/trainingconfig/staricon.component';\n\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    TranslationsComponent,\n    NotyComponent,\n    ProfileComponent,\n    HomeComponent,\n    CourseComponent,\n    TranslationentryComponent,\n    FilterLanguagePipe,\n    TrainingconfigComponent,\n    TrainingComponent,\n    StatisticsComponent,\n    CoursepickerComponent,\n    TrainingresultComponent,\n    StarIconComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    BsDropdownModule.forRoot(),\n    TypeaheadModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n      <h1 class=\\\"page-title\\\">Login</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n<div class=\\\"col-4\\\">\\n    Username:\\n</div>\\n  <div class=\\\"col\\\">\\n    <input class=\\\"form-control-sm\\\" type=\\\"text\\\" #username placeholder=\\\"username\\\" >\\n  </div>\\n</div>\\n<div class=\\\"row mt-1\\\">\\n  <div class=\\\"col-4\\\">\\n    Password:\\n  </div>\\n  <div class=\\\"col\\\">\\n    <input class=\\\"form-control-sm\\\" type=\\\"password\\\" #password placeholder=\\\"password\\\" >\\n  </div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-4\\\">\\n\\n  </div>\\n  <div class=\\\"col\\\">\\n    <button  (click)=\\\"authenticate(username.value, password.value)\\\">Login</button>\\n    <button  (click)=\\\"register(username.value, password.value)\\\">Register</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../services/user.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {NotyService} from '../../services/noty.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit() {\n  }\n\n  authenticate(username: string, password: string) {\n     // will propagate current user after authentication to all components\n     this.userService.authenticate(username, password);\n  }\n\n  register(username: string, password: string) {\n    // will propagate current user after register to all components\n    this.userService.register(username, password);\n  }\n\n}\n","module.exports = \".noty {\\n   z-index: 99999;\\n   box-shadow: 0 .125rem .25rem rgba(0,0,0,.075)!important;\\n}\\n\"","module.exports = \"<div style=\\\"position:absolute;top:30px\\\">\\n\\n\\n  <div *ngFor=\\\"let noty of activeNotys\\\" [@notyTrigger]=\\\"'dummy'\\\" class=\\\"alert noty\\\" [ngClass]=\\\"noty.cssClass\\\">\\n     {{noty.message}}\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NotyService} from '../../services/noty.service';\nimport {Noty, NotyType} from '../../services/noty';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-noty',\n  templateUrl: './noty.component.html',\n  styleUrls: ['./noty.component.css'],\n  animations: [\n    trigger('notyTrigger', [\n      transition('* => void', [\n        style({ opacity: 1 }),\n        animate(\"0.5s ease\", style({ opacity:0 }))\n      ]),\n      transition('void => *', [\n        style({ opacity: 0 }),\n        animate(\"0.5s ease\", style({ opacity: 1 }))\n      ])\n    ])\n  ],\n})\nexport class NotyComponent implements OnInit {\n\n  activeNotys:Noty[] = [];\n\n  constructor(public notyService:NotyService) { }\n\n  ngOnInit() {\n    this.notyService.getNotys().subscribe(noty => {\n      this.activeNotys.push(noty);\n      setTimeout(() => this.activeNotys.splice(0,1),3000);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">Username</div>\\n  <div class=\\\"col col-md-5\\\">{{user.username}}</div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">Language</div>\\n  <div class=\\\"col col-md-5\\\">\\n    <select class=\\\"form-control\\\" [(ngModel)]=\\\"user.language\\\" (change)=\\\"onChangeLanguage()\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">{{ 'language.'+language | translate}}</option>\\n    </select>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../services/user.service';\nimport {User} from '../../services/user';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: User;\n  languages: string[];\n\n  constructor(private userService:UserService,\n              private translationService:TranslateService) {\n  }\n\n  ngOnInit() {\n    this.userService.getLoggedInUser().subscribe(u => this.user = u);\n    this.languages = ['ENGLISH','GERMAN'];\n  }\n\n  onChangeLanguage() {\n    this.translationService.use(this.user.language);\n    this.userService.update(this.user);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"statisticsList && statisticsList.length == 0\\\">\\n   No statistics recorded yet\\n</div>\\n<div class=\\\"row\\\" *ngFor=\\\"let stat of statisticsList\\\">\\n  <div class=\\\"col-5\\\">\\n    {{stat.translation.translation}}\\n  </div>\\n  <div class=\\\"col\\\">\\n    {{stat.skillLevelFrom}}/{{stat.skillLevelTo}}\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {TranslationStatistics} from \"../../../services/training/model/translationstatistics\";\nimport {TranslationStatisticsService} from \"../../../services/training/translationstatistics.service\";\nimport {User} from \"../../../services/user\";\nimport {UserService} from \"../../../services/user.service\";\nimport {load} from \"@angular/core/src/render3/instructions\";\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\nexport class StatisticsComponent implements OnInit {\n\n  statisticsList: TranslationStatistics[];\n  user: User;\n  loading: Boolean = false;\n\n  constructor(private statisticsService:TranslationStatisticsService,\n              private userService:UserService) { }\n\n  ngOnInit() {\n    this.statisticsService.getLoadingListener().subscribe(\n      loading => this.loading = loading\n    );\n    this.userService.getLoggedInUser().subscribe(\n      u => {\n        this.user = u;\n        this.refreshStatistics();\n      }\n    );\n  }\n\n  refreshStatistics() {\n    this.statisticsService.listStatistics().subscribe(\n      stats => this.statisticsList = stats\n    );\n  }\n\n}\n","module.exports = \".question {\\n  font-size: xx-large;\\n}\\n\\n.answer {\\n  font-size: xx-large;\\n  line-height: 2;\\n  width:100%;\\n}\\n\\nbutton.answer-ok {\\n  font-size: xx-large;\\n  line-height: 2;\\n  width:50%;\\n}\\n\\nbutton.answer-nok {\\n  font-size: xx-large;\\n  line-height: 2;\\n  width:50%;\\n}\\n\\n.hint {\\n  font-size: x-large;\\n  color: gray;\\n}\\n\\n.font-big {\\n  font-size: 48pt;\\n}\\n\\n.font-normal {\\n  font-size: 32pt;\\n}\\n\"","module.exports = \"<form name=\\\"guessingForm\\\" (keyup.enter)=\\\"checkGuess()\\\">\\n<div *ngIf=\\\"trainingFinish\\\">\\n    <app-trainingresult [startResult]=\\\"training.result\\\"\\n                        [finishResult]=\\\"trainingFinish.result\\\"\\n                        [direction]=\\\"training.configuration.direction\\\"></app-trainingresult>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"currentStatistics\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"row question\\\">\\n      <div class=\\\"col\\\" *ngIf=\\\"isCurrentDirectionTo\\\">\\n        <div class=\\\"row\\\">\\n          <div *ngIf=\\\"currentStatistics.translation.iconUrl\\\" class=\\\"col-2\\\"><img [src]=\\\"currentStatistics.translation.iconUrl\\\"></div>\\n          <div class=\\\"col\\\" [ngClass]=\\\"fontClass\\\">{{currentStatistics.translation.translation}}</div>\\n            <div class=\\\"col text-right\\\" *ngIf=\\\"currentStatistics.showHint\\\">{{currentStatistics.translation.hint}}</div>\\n            <div class=\\\"col text-right\\\" *ngIf=\\\"!currentStatistics.showHint\\\">\\n              <button class=\\\"btn btn-outline-dark \\\" (click)=\\\"currentStatistics.showHint = true\\\">show hint</button>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!guessInput\\\">\\n          <div class=\\\"col\\\">\\n            <span>{{lockedGuess}} => </span>\\n            <span>{{currentStatistics.translation.translatesTo[0].translation}}</span>\\n            <span *ngIf=\\\"isGuessCorrect\\\"> (Success) </span>\\n            <span *ngIf=\\\"!isGuessCorrect\\\"> (Failed) </span>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\" *ngIf=\\\"!isCurrentDirectionTo\\\">\\n        <div class=\\\"row\\\"><div class=\\\"col\\\">{{currentStatistics.translation.translatesTo[0].translation}}</div></div>\\n        <div class=\\\"row\\\" *ngIf=\\\"!guessInput\\\">\\n          <div class=\\\"col\\\">{{lockedGuess}} => </div>\\n          <div class=\\\"col\\\">{{currentStatistics.translation.translation}}</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n          <input *ngIf=\\\"guessInput\\\" name=\\\"guess\\\" type=\\\"text\\\"  class=\\\"form-control form-control-sm answer\\\" [(ngModel)]=\\\"guess\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row mt-2\\\">\\n      <div class=\\\"col\\\">\\n        <button *ngIf=\\\"guessInput\\\" class=\\\"material-icons btn btn-outline-dark answer\\\" (click)=\\\"checkGuess()\\\">input</button>\\n        <div class=\\\"btn-group\\\" *ngIf=\\\"!guessInput\\\">\\n          <button class=\\\"material-icons btn btn-outline-dark answer-ok\\\" (click)=\\\"addRun(true)\\\" [disabled]=\\\"loading\\\">check</button>\\n          <button class=\\\"material-icons btn btn-outline-dark answer-nok\\\" (click)=\\\"addRun(false)\\\" [disabled]=\\\"loading\\\">cancel</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n</form>\\n\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {UserService} from '../../../services/user.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {TrainingService} from '../../../services/training/training.service';\nimport {Training} from '../../../services/training/model/training';\nimport {TranslationStatistics} from '../../../services/training/model/translationstatistics';\nimport {TranslationStatisticsService} from '../../../services/training/translationstatistics.service';\nimport {TranslationRun} from '../../../services/training/model/translationrun';\nimport {AggregatedTrainingResult} from '../trainingresult/aggregatedTrainingResult';\nimport {merge, Observable, of, pipe} from 'rxjs';\nimport {delay, mapTo} from 'rxjs/operators';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.css'],\n})\nexport class TrainingComponent implements OnInit {\n\n  training:Training;\n  trainingFinish:Training;\n  stats:TranslationStatistics[];\n  currentStatistics:TranslationStatistics;\n  isCurrentDirectionTo = true;\n  loading = false;\n  guess: string;\n  lockedGuess: string;\n  isGuessCorrect: boolean;\n  guessInput = false;\n\n  constructor(private route:ActivatedRoute,\n              private userService:UserService,\n              private trainingService:TrainingService,\n              private statisticsService:TranslationStatisticsService) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(\n      (params) => {\n            this.reset();\n           const trainingId = +params.get('id');\n           this.trainingService.getTraining(trainingId).subscribe(\n             (t) => {\n               this.training = t;\n               this.fetchNextTranslations();\n             }\n           );\n      });\n  }\n\n  private reset() {\n    this.training = null;\n    this.trainingFinish = null;\n    this.guessInput = false;\n    this.loading = false;\n  }\n\n  fetchNextTranslations() {\n    this.loading = true;\n    this.statisticsService.fetchNextStatistics(this.training.id)\n      .subscribe((stats) => {\n        if (stats.length === 0) {\n          this.trainingService.closeTraining(this.training).subscribe(\n            (t) => {\n              this.trainingFinish = t;\n              this.loading = false;\n            }\n          );\n        } else {\n          this.loading = false;\n          this.stats = stats;\n          this.loadNextStatistics();\n        }\n      });\n  }\n\n  addRun(hit:boolean) {\n    this.loading = true;\n    this.statisticsService.addTranslationRun(\n      this.training.id,\n      this.currentStatistics.translation.id,\n      {hit:hit?1:0, runAt: new Date(), directionTo: this.isCurrentDirectionTo} as TranslationRun)\n      .subscribe(\n        () => {\n          this.loadNextStatistics();\n          this.loading = false;\n        }\n      );\n  }\n\n  loadNextStatistics() {\n    if (this.stats.length === 0) {\n      this.currentStatistics = null;\n      this.fetchNextTranslations();\n      return;\n    }\n    this.currentStatistics = this.stats.pop();\n    this.guess = '';\n    this.guessInput = true;\n    if (this.training.configuration.direction === 'FROM') {\n       this.isCurrentDirectionTo = false;\n    } else if (this.training.configuration.direction === 'TO') {\n      this.isCurrentDirectionTo = true;\n    } else {\n      this.isCurrentDirectionTo = !this.isCurrentDirectionTo;\n    }\n  }\n\n  checkGuess() {\n    if (this.loading) {\n      return;\n    }\n    this.lockedGuess = this.guess;\n    if (!this.guessInput) {\n      this.addRun(this.isGuessCorrect);\n    } else {\n      this.guessInput = false;\n      if (this.isCurrentDirectionTo) {\n        this.isGuessCorrect =\n          this.guess === this.currentStatistics.translation.translatesTo[0].translation;\n      } else {\n        this.isGuessCorrect =\n          this.guess === this.currentStatistics.translation.translation;\n      }\n    }\n  }\n\n  get fontClass(): string {\n    return this.currentStatistics.translation.translation.length < 10 ? 'font-big' : 'font-normal';\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Chapter} from '../../../services/translation/model/chapter';\n\n@Component({\n  selector: 'app-star-icon',\n  template: `<img *ngIf=\"chapter.chapterStatistics\" src=\"assets/icons/{{icon}}.png\">`\n})\nexport class StarIconComponent {\n  @Input()\n  chapter: Chapter;\n\n  @Input()\n  direction: string;\n\n  static getIconForScore(score:number) {\n    if (score < 100) {\n      return 'star0';\n    }\n    if (score < 200) {\n      return 'star100';\n    }\n    if (score < 300) {\n      return 'star200';\n    }\n    return 'star300';\n  }\n\n  static getStarIcon(chapter: Chapter, selectedDirection: string) {\n    switch (selectedDirection) {\n      case 'FROM': return StarIconComponent.getIconForScore(chapter.chapterStatistics.chapterScoreFrom);\n      case 'TO': return StarIconComponent.getIconForScore(chapter.chapterStatistics.chapterScoreTo);\n      default: return StarIconComponent.getIconForScore(\n        chapter.chapterStatistics.chapterScoreFrom>chapter.chapterStatistics.chapterScoreTo?\n          chapter.chapterStatistics.chapterScoreTo:chapter.chapterStatistics.chapterScoreFrom\n      );\n    }\n  }\n\n  get icon() {\n    return StarIconComponent.getStarIcon(this.chapter, this.direction);\n  }\n\n\n\n}\n","module.exports = \".chapter {\\n  margin-right:5px;\\n  padding: 2px;\\n  color: white;\\n  border-radius: 5px;\\n  font-size:0.7em;\\n  min-width: 100px;\\n}\\n\\n.chapter.on {\\n  background-color: #98ff98;\\n  border: 1px solid #98ff98;\\n  color: black;\\n}\\n\\n.chapter.on:hover {\\n  background-color: #ff99ba;\\n  border: 1px solid #ff99ba;\\n}\\n\\n.chapter.off {\\n  background-color: #ff99ba;\\n  border: 1px solid #ff99ba;\\n}\\n\\n.chapter.off:hover {\\n  background-color: #98ff98;\\n  border: 1px solid #98ff98;\\n  color: black;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">{{'translations.course' | translate}}</div>\\n  <div class=\\\"col-lg-5 col-10\\\">\\n    <div class=\\\"input-group\\\">\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedCourse\\\">\\n        <option *ngFor=\\\"let course of courses\\\" [ngValue]=\\\"course\\\">\\n          {{course.name}} ({{'language.'+course.language | translate}})\\n        </option>\\n      </select>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row mt-1\\\" *ngIf=\\\"selectedCourse\\\">\\n  <div class=\\\"col-2\\\">\\n     Chapters\\n  </div>\\n  <div class=\\\"col\\\">\\n    <button class=\\\"btn btn-outline-dark\\\"\\n            *ngFor=\\\"let chapter of selectedCourse.chapters\\\"\\n            (click)=\\\"chapter.toggle = !chapter.toggle\\\"\\n            [ngClass]=\\\"{'active':chapter.toggle}\\\">\\n      {{chapter.name}} <app-star-icon [chapter]=\\\"chapter\\\" [direction]=\\\"selectedDirection\\\"></app-star-icon>\\n    </button>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-1\\\" *ngIf=\\\"selectedCourse\\\">\\n  <div class=\\\"col-2\\\">\\n    Tags\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button class=\\\"btn btn-outline-dark\\\"\\n              *ngFor=\\\"let tag of tags\\\"\\n              (click)=\\\"tag.toggle = !tag.toggle\\\"\\n              [ngClass]=\\\"{'active':tag.toggle}\\\">\\n        {{tag.name}}\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-1\\\" *ngIf=\\\"selectedCourse\\\">\\n  <div class=\\\"col-2\\\">\\n    Direction\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n      <button class=\\\"btn btn-outline-dark material-icons\\\"\\n              *ngFor=\\\"let direction of directionOptions\\\"\\n              (click)=\\\"selectedDirection = direction\\\"\\n              [ngClass]=\\\"{'active':selectedDirection == direction}\\\">\\n         {{getDirectionImage(direction)}}\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-2\\\" *ngIf=\\\"selectedCourse\\\">\\n  <div class=\\\"col-2\\\">\\n    Limit\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n          <button class=\\\"btn btn-outline-dark\\\"\\n                  [ngClass]=\\\"{'active':!iterationMode}\\\"\\n                  (click)=\\\"iterationMode = false\\\">\\n             SkillLevel\\n          </button>\\n          <button class=\\\"btn btn-outline-dark\\\"\\n                  [ngClass]=\\\"{'active':iterationMode}\\\"\\n                  (click)=\\\"iterationMode = true\\\">\\n            Iteration\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row mt-1\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n          <button class=\\\"btn btn-outline-dark\\\"\\n                  *ngFor=\\\"let limit of limitOptions\\\"\\n                  (click)=\\\"selectedLimit = limit\\\"\\n                  [ngClass]=\\\"{'active':selectedLimit == limit}\\\">\\n            {{limit}}\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\" *ngIf=\\\"selectedCourse\\\">\\n  <div class=\\\"col offset-2\\\">\\n      <button class=\\\"btn btn-outline-dark\\\" (click)=\\\"startTraining()\\\" [disabled]=\\\"loading\\\">Start Training...</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../../services/user.service';\nimport {TranslationService} from '../../../services/translation/translation.service';\nimport {User} from '../../../services/user';\nimport {Course} from '../../../services/translation/model/course';\nimport {Chapter} from '../../../services/translation/model/chapter';\nimport {TranslationTag} from '../../../services/translation/model/translationtag';\nimport {TrainingService} from '../../../services/training/training.service';\nimport {TrainingConfiguration} from '../../../services/training/model/trainingconfiguration';\n\nimport {Location} from '@angular/common';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-trainingconfig',\n  templateUrl: './trainingconfig.component.html',\n  styleUrls: ['./trainingconfig.component.css']\n})\nexport class TrainingconfigComponent implements OnInit {\n\n  user: User;\n  courses: Course[];\n  selectedCourse: Course;\n  tags: TranslationTag[];\n  iterationMode: Boolean = true;\n  limitOptions = [1,2,3,4];\n  selectedLimit = 1;\n  selectedDirection = 'TO';\n  directionOptions = ['FROM','BOTH','TO'];\n  loading = false;\n\n  constructor(private userService: UserService,\n              private translationService: TranslationService,\n              private trainingService:TrainingService,\n              private location: Location,\n              private router:Router) { }\n\n  ngOnInit() {\n    this.userService.getLoggedInUser().subscribe(\n      u => {\n        this.user = u;\n        this.translationService.getCourseSubscription().subscribe(\n          c => this.courses = c\n        );\n        this.translationService.subscribeTranslationTags().subscribe(\n          t => this.tags = t\n        );\n        this.translationService.updateCourseList();\n        this.translationService.listTranslationTags().subscribe();\n      }\n    );\n  }\n\n  startTraining() {\n    this.loading = true;\n    this.trainingService\n      .addTraining({\n         course: this.selectedCourse,\n         chapters: this.selectedCourse.chapters.filter( (c) => c.toggle),\n         direction: this.selectedDirection,\n         iterationMode: this.iterationMode,\n         iterationsLimit: this.iterationMode?this.selectedLimit:0,\n         skillLevelLimit: this.iterationMode?0:this.selectedLimit,\n         toLanguage: this.user.language,\n         tags: this.tags.filter((t) => t.toggle)\n      } as TrainingConfiguration)\n      .subscribe(\n        (training) => {\n          this.loading = false;\n          this.router.navigateByUrl('training/'+training.id);\n          },\n        () => { this.loading = false; });\n  }\n\n\n  getDirectionImage(direction: string) {\n    switch (direction) {\n      case 'FROM': return 'arrow_back';\n      case 'TO': return 'arrow_forward';\n      default: return 'swap_horiz';\n    }\n  }\n}\n","export class AggregatedTrainingResult {\n  hitScore: number;\n  hitScoreClass: string;\n  skillScoreFrom: number;\n  skillScoreChangeFrom: number;\n  skillScoreFromClass: string;\n  skillScoreTo: number;\n  skillScoreChangeTo: number;\n  skillScoreToClass: string;\n  runCount: number;\n\n  static convertHitScoreToClass(hitScore:number):string {\n    if (hitScore < 20) {\n      return 'danger';\n    }\n    if (hitScore < 50) {\n      return 'warning';\n    }\n    if (hitScore < 70) {\n      return 'info';\n    }\n    return 'success';\n  }\n\n  static convertScoreToClass(score:number):string {\n    if (score < 200) {\n      return 'danger';\n    }\n    if (score < 300) {\n      return 'warning';\n    }\n    if (score < 400) {\n      return 'info';\n    }\n    return 'success';\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-6\\\" [ngClass]=\\\"result.hitScoreClass\\\">\\n    <progressbar [value]=\\\"result.hitScore\\\"\\n                 [type]=\\\"result.hitScoreClass\\\"\\n                 [animate]=\\\"true\\\">{{result.hitScore}}% Hit</progressbar>\\n  </div>\\n</div>\\n<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-6\\\">\\n    <progressbar *ngIf=\\\"direction =='FROM' || direction == 'BOTH'\\\"\\n                 [max]=\\\"400\\\"\\n                 [value]=\\\"result.skillScoreFrom\\\"\\n                 [animate]=\\\"true\\\">\\n      {{result.skillScoreFrom}} Skill</progressbar>\\n  </div>\\n</div>\\n<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-6\\\">\\n    <progressbar *ngIf=\\\"direction =='TO' || direction == 'BOTH'\\\"\\n                 [max]=\\\"400\\\"\\n                 [value]=\\\"result.skillScoreTo\\\"\\n                 [animate]=\\\"true\\\">{{result.skillScoreTo}} Skill</progressbar>\\n  </div>\\n</div>\\n<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-2\\\">Words</div>\\n  <div class=\\\"col-2\\\">\\n    {{result.runCount}}\\n  </div>\\n</div>\\n<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col\\\">\\n      <button class=\\\"btn btn-outline-dark material-icons\\\" routerLink=\\\"/home\\\">chevron_left</button>\\n  </div>\\n</div>\\n\"","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {AggregatedTrainingResult} from './aggregatedTrainingResult';\nimport {of} from 'rxjs';\nimport {delay} from 'rxjs/operators';\nimport {InputExclusionDescriptor} from 'tslint/lib/rules/completed-docs/exclusionDescriptors';\nimport {TrainingResult} from '../../../services/training/model/trainingresult';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-trainingresult',\n  templateUrl: './trainingresult.component.html',\n  styleUrls: ['./trainingresult.component.css'],\n  animations: [\n    // animation triggers go here\n    trigger('progress',[\n      state('start', style({\n        width:0\n      })),\n      state('end',style({\n        width:'100%'\n      })),\n      transition('start => end',animate('1s'))\n    ])]\n})\nexport class TrainingresultComponent implements OnChanges {\n\n  @Input('finishResult')\n  private finishResult:TrainingResult;\n\n  @Input('startResult')\n  private startResult:TrainingResult;\n\n  @Input('direction')\n  direction:string;\n\n  result: AggregatedTrainingResult;\n\n  constructor() { }\n\n  ngOnChanges() {\n      this.result = this.createTrainingComponentResult(\n        this.startResult,\n        this.finishResult,\n        this.direction);\n  }\n\n  private createTrainingComponentResult(startResult:TrainingResult,\n                                        finishResult:TrainingResult,\n                                        direction:string):AggregatedTrainingResult {\n    const result = new AggregatedTrainingResult();\n    const hitScore = finishResult.hitScore;\n    result.hitScore = 0;\n    result.hitScoreClass = 'danger';\n    // animate the hit score\n    of(hitScore).pipe(delay(1000))\n      .subscribe((score) => {\n        result.hitScore = score>0?score:0;\n        result.hitScoreClass = AggregatedTrainingResult.convertHitScoreToClass(result.hitScore);\n      });\n    const skillScoreFrom = finishResult.skillScoreFrom;\n    const skillScoreTo = finishResult.skillScoreTo;\n    result.skillScoreTo = startResult.skillScoreTo;\n    result.skillScoreFrom = startResult.skillScoreFrom;\n    result.skillScoreChangeFrom = 0;\n    result.skillScoreChangeTo = 0;\n    of(skillScoreFrom).pipe(delay(1000)).subscribe(\n      (score) => {\n        result.skillScoreFrom = score;\n        result.skillScoreFromClass = AggregatedTrainingResult.convertScoreToClass(score);\n        if (direction === 'FROM' ||\n          direction === 'BOTH') {\n          result.skillScoreChangeFrom = score - startResult.skillScoreFrom;\n        }\n      }\n    );\n    of(skillScoreTo).pipe(delay(1000)).subscribe(\n      (score) => {\n        result.skillScoreTo = score;\n        result.skillScoreToClass = AggregatedTrainingResult.convertScoreToClass(score);\n        if (direction === 'TO' ||\n          direction === 'BOTH') {\n          result.skillScoreChangeTo = score - startResult.skillScoreTo;\n        }\n      }\n    );\n    result.runCount = finishResult.runCount;\n    return result;\n  }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"course\\\" class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        Course:\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"course.name\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n       Language:\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"course.language\\\">\\n          <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">{{ 'language.'+language | translate}}</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        Chapters:\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n         <a class=\\\"btn btn-outline-light material-icons\\\" (click)=\\\"addChapter()\\\">add</a>\\n      </div>\\n    </div>\\n    <div *ngFor=\\\"let chapter of course.chapters\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"chapter.name\\\">\\n      </div>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"btn-group btn-group-lg\\\">\\n          <a class=\\\"btn btn-outline-light material-icons\\\" (click)=\\\"moveChapterUp(chapter)\\\">arrow_upward</a>\\n          <a class=\\\"btn btn-outline-light material-icons\\\" (click)=\\\"removeChapter(chapter)\\\">cancel</a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"btn-group btn-group-lg\\\">\\n          <a class=\\\"btn btn-lg btn-outline-info material-icons\\\" routerLink=\\\"/translations\\\">chevron_left</a>\\n          <button [disabled]=\\\"saving\\\" class=\\\"btn btn-lg btn-outline-info\\\" (click)=\\\"save()\\\">Save</button>\\n          <button [disabled]=\\\"saving\\\" class=\\\"btn btn-lg btn-outline-info material-icons\\\" (click)=\\\"delete()\\\">delete_forever</button>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\">\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {Course} from '../../../services/translation/model/course';\nimport {TranslationService} from '../../../services/translation/translation.service';\nimport {Chapter} from '../../../services/translation/model/chapter';\nimport {NotyService} from '../../../services/noty.service';\nimport {switchMap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n  course: Course;\n  languages: string[];\n  saving = false;\n  loading: Boolean = false;\n\n  static updateChapterIndex(chapters:Chapter[]) {\n    chapters.forEach( (chapter,index) => {\n      chapter.index = index;\n    });\n  }\n\n  constructor(private route:ActivatedRoute,\n              private location:Location,\n              private translationService:TranslationService,\n              private notyService:NotyService) {\n    translationService.getLoadingListener().subscribe(\n      loading => this.loading = loading\n    );\n  }\n\n  ngOnInit() {\n    this.languages = this.translationService.listLanguages();\n    this.route.paramMap.subscribe(\n      (params) => {\n            if (params.get('id') === 'new') {\n              this.course = new Course();\n              this.course.chapters = [];\n            } else {\n              const id = +this.route.snapshot.paramMap.get('id');\n              this.translationService.getCourse(id).subscribe(\n                course => this.course = course\n              );\n            }\n        });\n  }\n\n  save() {\n    CourseComponent.updateChapterIndex(this.course.chapters);\n    if (this.course.id) {\n       this.translationService.updateCourse(this.course).subscribe(\n         () => {\n           this.notyService.addSuccess('Course updated');\n           this.translationService.updateCourseList();\n         }\n       );\n    } else {\n      this.saving = true;\n      this.translationService.addCourse(this.course).subscribe(\n        course => {\n          this.saving = false;\n          if (course) {\n            this.course = course;\n            this.notyService.addSuccess('New Course added');\n            this.translationService.updateCourseList();\n          }\n        }\n      );\n    }\n  }\n\n  addChapter() {\n    this.course.chapters.push({} as Chapter);\n  }\n\n  removeChapter(chapter:Chapter) {\n    this.course.chapters.forEach((value,index) => {\n      if (value === chapter) {\n        this.course.chapters.splice(index,1);\n      }\n    });\n  }\n\n  moveChapterUp(chapter:Chapter) {\n    const idx = this.course.chapters.indexOf(chapter);\n    if (idx <= 0) {\n      return;\n    }\n    this.course.chapters.splice(idx-1,0,chapter);\n    this.course.chapters.splice(idx+1,1);\n  }\n\n  delete() {\n    this.saving = true;\n    this.translationService.deleteCourse(this.course.id).subscribe(\n      () => this.location.back()\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">{{'translations.course' | translate}}</div>\\n  <div class=\\\"col-lg-5 col-10\\\">\\n    <div class=\\\"input-group\\\">\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"coursePick.selectedCourse\\\" (change)=\\\"changeCourse()\\\">\\n        <option *ngFor=\\\"let course of courses\\\" [ngValue]=\\\"course\\\">\\n          {{course.name}} ({{'language.'+course.language | translate}})\\n        </option>\\n      </select>\\n      <div class=\\\"input-group-append\\\">\\n        <a *ngIf=\\\"coursePick.selectedCourse\\\" class=\\\"material-icons btn btn-outline-info\\\" routerLink=\\\"/course/{{coursePick.selectedCourse.id}}\\\">create</a>\\n        <a class=\\\"material-icons btn btn-outline-info\\\" routerLink=\\\"/course/new\\\">add</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-2\\\">{{'translations.chapter' | translate}}</div>\\n  <div class=\\\"col-lg-5 col-10\\\">\\n    <select *ngIf=\\\"coursePick.selectedCourse\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"coursePick.selectedChapter\\\" (change)=\\\"refreshChapter()\\\">\\n      <option *ngFor=\\\"let chapter of coursePick.selectedCourse.chapters\\\" [ngValue]=\\\"chapter\\\">{{chapter.name}}</option>\\n    </select>\\n  </div>\\n</div>\\n<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-2\\\">{{'translations.language' | translate}}</div>\\n  <div class=\\\"col-lg-5 col-10\\\">\\n    <select class=\\\"form-control\\\" [(ngModel)]=\\\"coursePick.selectedLanguage\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">{{ 'language.'+language | translate}}</option>\\n    </select>\\n  </div>\\n</div>\\n\"","\nimport {User} from '../../../services/user';\nimport {CoursePick} from '../../../services/translation/model/coursepick';\nimport {Component, Input, OnInit} from '@angular/core';\nimport {Course} from '../../../services/translation/model/course';\nimport {UserService} from '../../../services/user.service';\nimport {TranslationService} from '../../../services/translation/translation.service';\nimport {Chapter} from '../../../services/translation/model/chapter';\n\n@Component({\n  selector: 'app-coursepicker',\n  templateUrl: './coursepicker.component.html',\n  styleUrls: ['./coursepicker.component.css']\n})\nexport class CoursepickerComponent implements OnInit {\n\n  @Input('coursePick')\n  coursePick: CoursePick;\n\n  user: User;\n  languages: string[];\n  courses: Course[];\n\n  constructor(private userService: UserService,\n              private translationService: TranslationService) {\n  }\n\n  ngOnInit() {\n    this.userService.getLoggedInUser().subscribe(u => {\n      this.user = u;\n      this.subscribeCourseUpdates();\n      this.translationService.updateCourseList();\n    });\n    this.languages = this.translationService.listLanguages();\n  }\n\n  subscribeCourseUpdates() {\n    this.translationService.getCourseSubscription().subscribe(\n      courses => this.courses = courses\n    );\n  }\n\n  changeCourse() {\n    if (this.coursePick.selectedCourse.chapters.length > 0) {\n      this.coursePick.selectedChapter = this.coursePick.selectedCourse.chapters[0];\n      this.refreshChapter();\n    }\n  }\n\n  refreshChapter() {\n    this.translationService.getChapter(this.coursePick.selectedChapter.id).subscribe(\n      (chapter) => {\n        // replace with refreshed chapter\n        const idx = this.coursePick.selectedCourse.chapters\n          .findIndex((c) => c === this.coursePick.selectedChapter);\n        this.coursePick.selectedCourse.chapters[idx]=chapter;\n        this.coursePick.selectedChapter = chapter;\n      }\n    );\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <button class=\\\"btn btn-outline-dark\\\" routerLink=\\\"/config\\\">New Training...</button>\\n  </div>\\n</div>\\n<div class=\\\"row mt-1\\\">\\n  <div class=\\\"col\\\">\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th>When?</th>\\n        <th>What?</th>\\n        <th>Chapters</th>\\n        <th>Tags</th>\\n        <th></th>\\n      </tr>\\n      </thead>\\n       <tbody class=\\\"table-hover\\\">\\n          <tr *ngFor=\\\"let training of trainings\\\">\\n            <td>{{training.startedAt | date:'EEEE, MMMM d'}}</td>\\n            <td>Training for {{'language.'+training.configuration.course.language | translate}}</td>\\n            <td><button class=\\\"tag\\\" *ngFor=\\\"let chapter of training.configuration.chapters\\\">\\n              {{chapter.name}}\\n            </button></td>\\n            <td> <button class=\\\"tag\\\" *ngFor=\\\"let tag of training.configuration.tags\\\">\\n               {{getTagName(tag)}}\\n            </button></td>\\n            <td>\\n              <div class=\\\"btn-group\\\">\\n                <button class=\\\"btn btn-outline-dark material-icons\\\"\\n                        [routerLink]=\\\"'/training/'+training.id\\\"\\n                        *ngIf=\\\"!training.endedAt\\\">play_circle_outline</button>\\n                <button class=\\\"btn btn-outline-dark material-icons\\\"\\n                        [routerLink]=\\\"'/training/'+training.id\\\"\\n                        *ngIf=\\\"training.endedAt\\\">{{getStatImage(training)}}</button>\\n                <button class=\\\"btn btn-outline-dark material-icons\\\"\\n                        (click)=\\\"closeTraining(training)\\\"\\n                        *ngIf=\\\"!training.endedAt\\\">stop</button>\\n                <button class=\\\"btn btn-outline-dark material-icons\\\"\\n                        (click)=\\\"replayTraining(training)\\\"\\n                        *ngIf=\\\"training.endedAt\\\">replay</button>\\n              </div>\\n            </td>\\n          </tr>\\n       </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../../services/user.service';\nimport {User} from '../../../services/user';\nimport {Training} from '../../../services/training/model/training';\nimport {TrainingService} from '../../../services/training/training.service';\nimport {NotyService} from '../../../services/noty.service';\nimport {TranslationTag} from '../../../services/translation/model/translationtag';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  user: User;\n  trainings: Training[];\n\n  constructor(private userService:UserService,\n              private trainingService:TrainingService) { }\n\n  ngOnInit() {\n    this.userService.getLoggedInUser().subscribe(\n      user => {\n        this.user = user;\n        this.trainingService.getTrainingSubscription().subscribe(\n          (t) => this.trainings = t\n        );\n        this.trainingService.updateTrainingList();\n      }\n    );\n  }\n\n  closeTraining(training:Training) {\n     this.trainingService.closeTraining(training);\n  }\n\n  replayTraining(training:Training) {\n    this.trainingService.addTraining(training.configuration).subscribe();\n  }\n\n  getTagName(tag:TranslationTag):string {\n    if (tag.name === 'EMPTY_TAG') {\n      return '-';\n    }\n    return tag.name;\n  }\n\n\n  getStatImage(training: Training):string {\n    if (training.configuration.direction === 'FROM') {\n      return 'filter_'+training.result.minSkillFrom;\n    }\n    if (training.configuration.direction === 'TO') {\n      return 'filter_'+training.result.minSkillTo;\n    }\n    return 'filter_'+Math.min(training.result.minSkillFrom,training.result.minSkillTo);\n  }\n}\n","module.exports = \"td .tag {\\n  margin-right:5px;\\n  padding: 2px;\\n  color: white;\\n  background-color: lightblue;\\n  border: 1px solid lightblue;\\n  border-radius: 5px;\\n  font-size:0.7em;\\n}\\n\\ntd .tag:hover {\\n  background-color: #50acca;\\n}\\n\\ntd .tag i {\\n  display:none;\\n}\\n\\ntd .tag:hover i {\\n  display:inline;\\n}\\n\\ntd.translation {\\n  width: 15%;\\n}\\n\\ntd.translates {\\n  width: 15%;\\n}\\n\\ntd.hint {\\n  width: 15%;\\n}\\n\\ntd.phrase {\\n  width: 20%;\\n  max-width: 300px;\\n}\\n\\ntd.phrase input:focus {\\n\\n}\\n\\ntd.tag {\\n  width: 15%;\\n}\\n\\ntd.actions {\\n  width: 15%;\\n}\\n\"","module.exports = \"<td *ngIf=\\\"translation.edit\\\" class=\\\"translation\\\">\\n  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"translation\\\" [(ngModel)]=\\\"translation.translation\\\">\\n</td>\\n<td *ngIf=\\\"translation.edit\\\" class=\\\"translates\\\">\\n  <div *ngFor=\\\"let translates of translation.translatesTo | filterLanguage:selectedLanguage\\\" class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"translatesTo\\\" [(ngModel)]=\\\"translates.translation\\\">\\n    </div>\\n  </div>\\n</td>\\n<td *ngIf=\\\"translation.edit\\\" class=\\\"hint\\\">\\n  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"hint\\\" [(ngModel)]=\\\"translation.hint\\\">\\n</td>\\n<td *ngIf=\\\"translation.edit\\\" class=\\\"phrase\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n    <div class=\\\"input-group input-group-sm\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"phraseInput\\\">\\n      <div class=\\\"input-group-append\\\">\\n        <button class=\\\"material-icons btn btn-outline-dark\\\" (click)=\\\"addToPhrases()\\\">add</button>\\n      </div>\\n    </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row mt-1\\\" *ngFor=\\\"let phrase of translation.phrases\\\">\\n    <div class=\\\"col\\\">\\n      <button class=\\\"tag\\\" (click)=\\\"deletePhrase(phrase)\\\">{{phrase.translation}}\\n        <i class=\\\"material-icons\\\">highlight_off</i>\\n      </button>\\n    </div>\\n  </div>\\n</td>\\n<td *ngIf=\\\"translation.edit\\\" class=\\\"tag\\\">\\n  <div class=\\\"row\\\">\\n  <div class=\\\"input-group input-group-sm\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"tag\\\"\\n           [(ngModel)]=\\\"tagInput\\\"\\n           [typeahead]=\\\"getAvailableTags()\\\"\\n           [typeaheadMinLength]=\\\"0\\\"\\n           (typeaheadOnSelect)=\\\"addToTags($event.value)\\\"\\n           typeaheadOptionField=\\\"name\\\">\\n    <div class=\\\"input-group-append\\\">\\n      <button class=\\\"material-icons btn btn-outline-dark\\\" (click)=\\\"addToTags(tagInput)\\\">add</button>\\n    </div>\\n  </div>\\n  </div>\\n  <div class=\\\"row mt-1\\\">\\n    <button *ngFor=\\\"let tag of translation.tags\\\" class=\\\"tag\\\" (click)=\\\"deleteTag(tag)\\\">{{tag.name}} <i\\n      class=\\\"material-icons\\\">highlight_off</i></button>\\n  </div>\\n</td>\\n<td *ngIf=\\\"translation.edit\\\" class=\\\"actions\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"material-icons btn btn-outline-info btn-sm\\\" (click)=\\\"saveTranslation()\\\">done</button>\\n    <button class=\\\"material-icons btn btn-outline-info btn-sm\\\" (click)=\\\"cancelEdit()\\\">clear</button>\\n  </div>\\n</td>\\n\\n<td *ngIf=\\\"!translation.edit\\\">\\n  {{translation.translation}}\\n</td>\\n<td *ngIf=\\\"!translation.edit\\\">\\n  <span *ngFor=\\\"let translatesTo of translation.translatesTo | filterLanguage:selectedLanguage\\\">{{translatesTo.translation}}</span>\\n</td>\\n<td *ngIf=\\\"!translation.edit\\\">\\n  {{translation.hint}}\\n</td>\\n<td *ngIf=\\\"!translation.edit\\\">\\n  <button *ngFor=\\\"let phrase of translation.phrases\\\" class=\\\"tag\\\">{{phrase.translation}}</button>\\n</td>\\n<td *ngIf=\\\"!translation.edit\\\">\\n  <button *ngFor=\\\"let tag of translation.tags\\\" class=\\\"tag\\\">{{tag.name}}</button>\\n</td>\\n<td *ngIf=\\\"!translation.edit\\\">\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"material-icons btn btn-outline-info btn-sm\\\" (click)=\\\"editTranslation(translation)\\\">create</button>\\n    <button class=\\\"material-icons btn btn-outline-info btn-sm\\\" (click)=\\\"removeTranslation()\\\">clear</button>\\n  </div>\\n</td>\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Translation} from '../../../services/translation/model/translation';\nimport {TranslationService} from '../../../services/translation/translation.service';\nimport {TranslationTag}from '../../../services/translation/model/translationtag';\nimport {UserService}from '../../../services/user.service';\nimport {User}from '../../../services/user';\nimport {Observable, of, timer} from 'rxjs';\nimport {debounce, mergeMap}from 'rxjs/operators';\n\n@Component({\n  selector: '[app-translationentry]',\n  templateUrl: './translationentry.component.html',\n  styleUrls: ['./translationentry.component.css']\n})\nexport class TranslationentryComponent implements OnInit {\n\n  tagInput: string;\n  phraseInput: string;\n\n  @Input('translation')\n  translation: Translation;\n\n  @Input('editMode')\n  editMode: boolean;\n\n  @Input('language')\n  selectedLanguage: string;\n\n  allTags: TranslationTag[] = [];\n\n  @Output() finishedEditEvent = new EventEmitter<boolean>();\n\n  @Output() removeTranslationEvent = new EventEmitter<boolean>();\n\n  user: User;\n\n  constructor(private userService:UserService,\n              private translationService:TranslationService) {\n  }\n\n  ngOnInit() {\n    this.userService.getLoggedInUser().subscribe((u) => this.user = u);\n  }\n\n  getAvailableTags():TranslationTag[] {\n    return this.allTags.filter(\n      (t) => !this.translation.tags.find(\n        (tag) => tag.name === t.name));\n  }\n\n  addToTags(tagName:string) {\n    if (this.translation.tags.find((t) => t.name === tagName)) {\n      return;\n    }\n    const addedTag = this.allTags.find((t) => t.name === tagName);\n    if (!addedTag) {\n      this.createAndAddTranslationTag(tagName);\n    } else {\n      this.translation.tags.push(addedTag);\n      this.tagInput = '';\n    }\n  }\n\n  private createAndAddTranslationTag(tagName:string) {\n    this.translationService.addTranslationTag({name:tagName,createdBy:this.user} as TranslationTag).subscribe(\n      (tag) => {\n        this.allTags.push(tag);\n        this.translation.tags.push(tag);\n        this.tagInput = '';\n      }\n    );\n  }\n\n  addToPhrases() {\n     this.translation.phrases.push({\n       translation:this.phraseInput,\n       language:this.translation.language } as Translation);\n     this.phraseInput = '';\n  }\n\n  deletePhrase(phrase:Translation) {\n     const idx = this.translation.phrases.indexOf(phrase);\n     this.translation.phrases.splice(idx,1);\n  }\n\n  deleteTag(tag:TranslationTag) {\n    const idx = this.translation.tags.indexOf(tag);\n    this.translation.tags.splice(idx,1);\n  }\n\n  saveTranslation() {\n    this.finishedEditEvent.emit(true);\n  }\n\n  cancelEdit() {\n    this.finishedEditEvent.emit(false);\n  }\n\n  removeTranslation() {\n    this.removeTranslationEvent.emit(true);\n  }\n\n  editTranslation(translation:Translation) {\n    this.refreshTags();\n    translation.edit = true;\n    // if there is no translatesTo with selected language then create one to allow edit\n    if (!translation.translatesTo) {\n      translation.translatesTo = [];\n    }\n    const idx = translation.translatesTo.findIndex((t) => t.language === this.selectedLanguage);\n    if (idx===-1) {\n      translation.translatesTo.push({language:this.selectedLanguage} as Translation);\n    }\n  }\n\n  refreshTags() {\n    this.translationService.listTranslationTags().subscribe(\n      tags => this.allTags = tags\n    );\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {Translation} from '../../../services/translation/model/translation';\n\n@Pipe({\n  name: 'filterLanguage',\n  pure: false\n})\nexport class FilterLanguagePipe implements PipeTransform {\n  transform(translations: Translation[], filter: string): any {\n    if (!translations || !filter) {\n      return translations;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n    return translations.filter((t) => t.language === filter);\n  }\n}\n","module.exports = \".translation th {\\n   font-size: 0.7em;\\n}\\n\"","module.exports = \"<app-coursepicker [coursePick]=\\\"coursePick\\\"></app-coursepicker>\\n<div class=\\\"row mt-2\\\" *ngIf=\\\"coursePick.selectedChapter && coursePick.selectedLanguage\\\">\\n  <div class=\\\"col\\\"><button (click)=\\\"add()\\\">Add</button></div>\\n</div>\\n<div class=\\\"row mt-2\\\" *ngIf=\\\"coursePick.selectedChapter && coursePick.selectedLanguage\\\">\\n  <table class=\\\"table translation\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th scope=\\\"col\\\" width=\\\"15%\\\">{{'translations.table.translation' | translate}}</th>\\n        <th scope=\\\"col\\\" width=\\\"15%\\\">{{'translations.table.translates' | translate}}</th>\\n        <th scope=\\\"col\\\" width=\\\"15%\\\">{{'translations.table.hint' | translate}}</th>\\n        <th scope=\\\"col\\\" width=\\\"20%\\\">{{'translations.table.phrase' | translate}}</th>\\n        <th scope=\\\"col\\\" width=\\\"15%\\\">{{'translations.table.tags' | translate}}</th>\\n        <th scope=\\\"col\\\" width=\\\"15%\\\"></th>\\n      </tr>\\n    </thead>\\n    <tbody class=\\\"table-hover\\\">\\n    <tr app-translationentry\\n        *ngFor=\\\"let translation of coursePick.selectedChapter.translations\\\"\\n        [translation]=\\\"translation\\\"\\n        [language]=\\\"coursePick.selectedLanguage\\\"\\n        (finishedEditEvent)=\\\"finishedEdit($event,translation)\\\"\\n        (removeTranslationEvent)=\\\"removeTranslation(translation)\\\"></tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../../services/user.service';\nimport {User} from '../../../services/user';\nimport {Translation} from '../../../services/translation/model/translation';\nimport {Observable} from 'rxjs';\nimport {TranslationService} from '../../../services/translation/translation.service';\nimport {Course} from '../../../services/translation/model/course';\nimport {Chapter} from '../../../services/translation/model/chapter';\nimport {TranslationTag}from '../../../services/translation/model/translationtag';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CoursePick} from \"../../../services/translation/model/coursepick\";\n\n@Component({\n  selector: 'app-translations',\n  templateUrl: './translations.component.html',\n  styleUrls: ['./translations.component.css']\n})\nexport class TranslationsComponent implements OnInit {\n\n  user: User;\n  coursePick: CoursePick = new CoursePick();\n\n\n  constructor(private userService: UserService,\n              private translationService: TranslationService) { }\n\n  ngOnInit() {\n    this.userService.getLoggedInUser().subscribe(u => {\n      this.user = u;\n      this.coursePick.selectedLanguage = this.user.language || 'ENGLISH';\n    });\n  }\n\n  add() {\n    const t = new Translation();\n    t.edit = true;\n    t.language = this.coursePick.selectedCourse.language;\n    t.createdBy = this.user;\n    t.translatesTo = [];\n    t.translatesTo.push({language:this.coursePick.selectedLanguage, createdBy:this.user} as Translation);\n    t.phrases = [];\n    t.tags = [];\n    this.coursePick.selectedChapter.translations.push(t);\n  }\n\n  save(translation:Translation) {\n    if (translation.id) {\n      this.translationService.updateTranslation(translation).subscribe(\n        () => translation.edit = false\n      );\n    } else {\n      this.translationService.addTranslation(translation).subscribe(\n        t => {\n          translation.id = t.id;\n          this.translationService.updateChapter(this.coursePick.selectedChapter).subscribe(\n            () =>  translation.edit = false);\n        }\n      );\n    }\n  }\n\n  finishedEdit(save: boolean, translation:Translation) {\n    if (save) {\n      this.save(translation);\n    } else {\n      if (translation.id) {\n        // do revert the values to old one\n        this.translationService.getTranslation(translation.id).subscribe(\n          (oldTranslation) => {\n            const idxTranslation = this.coursePick.selectedChapter.translations.findIndex((t) => t === translation);\n            this.coursePick.selectedChapter.translations[idxTranslation] = oldTranslation;\n          });\n      } else {\n        this.removeTranslation(translation);\n      }\n    }\n  }\n\n  removeTranslation(translation:Translation) {\n    const idx = this.coursePick.selectedChapter.translations.findIndex((t) => t === translation);\n    this.coursePick.selectedChapter.translations.splice(idx,1);\n    this.translationService.updateChapter(this.coursePick.selectedChapter).subscribe();\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {Noty, NotyType} from './noty';\nimport {Observable, of, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotyService {\n\n  private notyStream:Subject<Noty> = new Subject<Noty>();\n\n  handleError<T> (errorMessage:string, result?: T) {\n    // weird construction, the function needs to return a function, which is called when an error occurs\n    // actual error object is passed to function below, but we ignore it ()\n    return ():Observable<T> => {\n      this.notyStream.next(new Noty(errorMessage, NotyType.ERROR));\n      return of(result as T);\n    };\n  }\n\n  addError(errorMessage:string) {\n    this.notyStream.next(new Noty(errorMessage, NotyType.ERROR));\n  }\n\n  addSuccess(successMessage:string) {\n    this.notyStream.next(new Noty(successMessage, NotyType.INFO));\n  }\n\n  getNotys():Observable<Noty> {\n    return this.notyStream.asObservable();\n  }\n\n}\n","export class Noty {\n  message: string;\n  type: NotyType;\n  cssClass: string;\n\n  constructor(message: string, type:NotyType) {\n    this.message = message;\n    this.type = type;\n\n    switch (type) {\n      case NotyType.ERROR: this.cssClass = 'alert-danger'; break;\n      case NotyType.INFO: this.cssClass = 'alert-success'; break;\n      case NotyType.WARNING: this.cssClass = 'alert-warning'; break;\n    }\n\n  }\n\n}\n\nexport enum NotyType {\n  ERROR,\n  INFO,\n  WARNING\n}\n","export class TrainingResult {\n   id:number;\n   runCount:number;\n   hitScore:number;\n\n   minSkillFrom:number;\n   minSkillTo:number;\n   skillScoreFrom:number;\n   skillScoreTo:number;\n\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NotyService} from \"../noty.service\";\nimport {Observable, Subject} from \"rxjs\";\nimport {Course} from \"../translation/model/course\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {TrainingConfiguration} from \"./model/trainingconfiguration\";\nimport {Training} from \"./model/training\";\nimport {TranslationTag} from '../translation/model/translationtag';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TrainingService {\n\n  private trainingUrl = '/api/training';\n\n  private loading = new Subject<Boolean>();\n\n  private trainings = new Subject<Training[]>();\n\n\n  constructor(private http:HttpClient,\n              private notyService: NotyService) {\n  }\n\n  getLoadingListener(): Observable<Boolean> {\n    return this.loading.asObservable();\n  }\n\n  updateTrainingList() {\n    this.http.get<Training[]>(this.trainingUrl+'/').pipe(\n      tap(() => this.loading.next(true)),\n      catchError(this.notyService.handleError('Could not fetch Trainings',[])),\n      finalize(() => this.loading.next(false))\n    ).subscribe(t => this.trainings.next(t));\n  }\n\n  getTrainingSubscription():Observable<Training[]> {\n    return this.trainings.asObservable();\n  }\n\n  addTraining(config:TrainingConfiguration):Observable<Training> {\n    // POST for adding entity to collection, it is NOT idempotent\n    return this.http.post<Training>(this.trainingUrl+'/',config).pipe(\n      tap(() => this.updateTrainingList()),\n      catchError(this.notyService.handleError('Could not add Training',null))\n    );\n  }\n\n  closeTraining(training:Training):Observable<Training> {\n    return this.http.post(this.trainingUrl+'/'+training.id+'/close',{}).pipe(\n      tap(() => this.updateTrainingList()),\n      catchError(this.notyService.handleError('Could not close Training', null))\n    );\n  }\n\n  static listDirections():string[] {\n    return ['FROM','TO','BOTH'];\n  }\n\n\n  getTraining(trainingId: number):Observable<Training>{\n    return this.http.get<Training>(this.trainingUrl+'/'+trainingId);\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NotyService} from \"../noty.service\";\nimport {TrainingConfiguration} from \"./model/trainingconfiguration\";\nimport {Training} from \"./model/training\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {TranslationRun} from \"./model/translationrun\";\nimport {TranslationStatistics} from \"./model/translationstatistics\";\nimport {TranslationTag} from \"../translation/model/translationtag\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationStatisticsService {\n\n  private statisticsUrl = '/api/statistics/translation';\n\n  private loading = new Subject<Boolean>();\n\n\n  constructor(private http:HttpClient,\n              private notyService: NotyService) {\n  }\n\n  getLoadingListener(): Observable<Boolean> {\n    return this.loading.asObservable();\n  }\n\n  addTranslationRun(trainingId:number, translationId:number, run:TranslationRun):Observable<Training> {\n    return this.http.post<Training>(this.statisticsUrl+'/'+trainingId+'/'+translationId,run).pipe(\n      catchError(this.notyService.handleError('Could not add Translation Run'))\n    );\n  }\n\n  getTranslationStatistics(translationId:number): Observable<TranslationStatistics> {\n    return this.http.get<TranslationStatistics>(this.statisticsUrl+'/'+translationId).pipe(\n      catchError(this.notyService.handleError('Could not fetch Statistics'))\n    );\n  }\n\n  fetchNextStatistics(trainingId:number): Observable<TranslationStatistics[]> {\n      return this.fetchNextStatisticsData(this.statisticsUrl + '/?trainingId=' + trainingId);\n  }\n\n  listStatistics(): Observable<TranslationStatistics[]> {\n    return this.fetchNextStatisticsData(this.statisticsUrl + '/');\n  }\n\n  private fetchNextStatisticsData(url:string) {\n    return this.http.get<TranslationStatistics[]>(url).pipe(\n      tap(() => this.loading.next(true)),\n      catchError(this.notyService.handleError('Could not fetch next Statistics',[])),\n      finalize(() => this.loading.next(false))\n    );\n\n  }\n}\n","import {Translation} from './translation';\nimport {ChapterStatistics} from './ChapterStatistics';\n\nexport class Chapter {\n  id: number;\n  name: string;\n  translations: Translation[];\n  index: number;\n\n  // transient\n  toggle: boolean;\n  chapterStatistics: ChapterStatistics;\n}\n","import {Chapter} from './chapter';\n\nexport class Course {\n  id: number;\n  name: string;\n  previous: Course;\n  next: Course;\n  chapters: Chapter[];\n  language: string;\n}\n","import {Course} from \"./course\";\nimport {Chapter} from \"./chapter\";\n\nexport class CoursePick {\n  selectedCourse: Course;\n  selectedChapter: Chapter;\n  selectedLanguage: string;\n\n  selectedChapters: Chapter[];\n\n}\n","import {TranslationTag} from './translationtag';\nimport {User} from '../../user';\n\nexport class Translation {\n  id: number;\n  translation: string;\n  language: string;\n  hint: string;\n  translatesTo: Translation[];\n  phrases: Translation[];\n  tags: TranslationTag[];\n  createdBy: User;\n  skillLevel: number;\n\n  // transient\n  edit: boolean;\n  iconUrl:string;\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {NotyService} from '../noty.service';\nimport {Observable, Subject} from 'rxjs';\nimport {Course} from './model/course';\nimport {Chapter} from './model/chapter';\nimport {Translation} from './model/translation';\nimport {TranslationTag} from './model/translationtag';\nimport {catchError, finalize, tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationService {\n\n  private courseUrl = '/api/course';\n  private chapterUrl = '/api/chapter';\n  private translationUrl = '/api/translation';\n  private translationTagUrl = '/api/tag';\n\n  private loading = new Subject<Boolean>();\n\n  private courses = new Subject<Course[]>();\n  private tags = new Subject<TranslationTag[]>();\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n  };\n\n  constructor(private http:HttpClient,\n              private notyService: NotyService) {\n  }\n\n  getLoadingListener(): Observable<Boolean> {\n    return this.loading.asObservable();\n  }\n\n  updateCourseList() {\n    this.http.get<Course[]>(this.courseUrl+'/').pipe(\n      tap(() => this.loading.next(true)),\n      catchError(this.notyService.handleError('Could not fetch Courses',[])),\n      finalize(() => this.loading.next(false))\n    ).subscribe(cs => this.courses.next(cs));\n  }\n\n  getCourseSubscription():Observable<Course[]> {\n    // we propagate the result to all who listen in\n    return this.courses.asObservable();\n  }\n\n  addCourse(course:Course):Observable<Course> {\n    // POST for adding entity to collection, it is NOT idempotent\n    return this.http.post<Course>(this.courseUrl+'/',course).pipe(\n      catchError(this.notyService.handleError('Could not add Course'))\n    );\n  }\n\n  getCourse(id:number):Observable<Course> {\n    return this.http.get<Course>(this.courseUrl+'/'+id).pipe(\n      catchError(this.notyService.handleError('Could not find Course'))\n    );\n  }\n\n  deleteCourse(id:number):Observable<Course> {\n    return this.http.delete<Course>(this.courseUrl+'/'+id).pipe(\n      catchError(this.notyService.handleError('Could not delete Course'))\n    );\n  }\n\n  getTranslation(id:number):Observable<Translation> {\n    return this.http.get<Translation>(this.translationUrl+'/'+id).pipe(\n      catchError(this.notyService.handleError('Could not find Translation'))\n    );\n  }\n\n  updateCourse(course:Course):Observable<Course> {\n    return this.http.put<Course>(this.courseUrl+'/'+course.id,course).pipe(\n      tap(() => this.loading.next(true)),\n      catchError(this.notyService.handleError('Could not update Course')),\n      finalize(() => this.loading.next(false))\n    );\n  }\n\n  updateChapter(chapter:Chapter):Observable<Chapter> {\n    return this.http.put<Chapter>(this.chapterUrl+'/'+chapter.id,chapter).pipe(\n      catchError(this.notyService.handleError('Could not update Chapter'))\n    );\n  }\n\n\n  addTranslation(translation:Translation):Observable<Translation> {\n    // POST for adding entity to collection, it is NOT idempotent\n    return this.http.post<Translation>(this.translationUrl+'/',translation).pipe(\n      catchError(this.notyService.handleError('Could not add Translation'))\n    );\n  }\n\n  updateTranslation(translation:Translation):Observable<Translation> {\n    return this.http.put<Translation>(this.translationUrl+'/'+translation.id,translation).pipe(\n      catchError(this.notyService.handleError('Could not update Translation'))\n    );\n  }\n\n  subscribeTranslationTags():Observable<TranslationTag[]> {\n    return this.tags.asObservable();\n  }\n\n  listTranslationTags():Observable<TranslationTag[]> {\n    return this.http.get<TranslationTag[]>(this.translationTagUrl+'/').pipe(\n      tap( t => this.tags.next(t)),\n      catchError(this.notyService.handleError('Could not fetch Translationtags',[]))\n    );\n  }\n\n  addTranslationTag(tag:TranslationTag):Observable<TranslationTag> {\n    return this.http.post<TranslationTag>(this.translationTagUrl+'/',tag).pipe(\n      catchError(this.notyService.handleError('Could not add Tag'))\n    );\n  }\n\n  listLanguages():string[] {\n    return ['JAPANESE_KANJI', 'JAPANESE_KANA', 'JAPANESE_ROMAJI', 'ENGLISH', 'SWEDISH', 'GERMAN', 'DUTCH'];\n  }\n\n  getChapter(id: number):Observable<Chapter> {\n    return this.http.get<Chapter>(this.chapterUrl+'/'+id).pipe(\n      catchError(this.notyService.handleError('Could not find Chapter'))\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, Subject} from 'rxjs';\nimport {User} from './user';\nimport {NotyService} from './noty.service';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n  };\n\n  private userUrl = 'api/user/';\n  private pendingUser = new Subject<User>();\n  private fetchedUser: User;\n\n  constructor(private http: HttpClient,\n              private notyService: NotyService) {\n    const url = `${this.userUrl}`;\n    this.http.get<User>(url+'current').subscribe(\n      user => {\n        this.pendingUser.next(user);\n      }\n    );\n    this.pendingUser.asObservable().subscribe(user => this.fetchedUser = user);\n  }\n\n  getLoggedInUser(): Observable<User> {\n    if (this.fetchedUser) {\n      return of(this.fetchedUser);\n    }\n    return this.pendingUser.asObservable();\n  }\n\n  authenticate(username: string, password: string) {\n    const url = `${this.userUrl}${username}/authentication?password=${password}`;\n    this.http.get<User>(url).subscribe(\n      user => this.pendingUser.next(user),\n      error => {\n        if (error.status === 401) {\n          this.notyService.addError('Could not login, incorrect username/password');\n        } else if (error.status === 404) {\n          this.notyService.addError('Server is down, please try again later');\n        } else {\n          this.notyService.addError('Authentication failed:' + error.statusText);\n        }\n      });\n  }\n\n  register(username: string, password: string) {\n    const url = `${this.userUrl}`;\n    this.http.post<User>(url, { username: username, password: password }, this.httpOptions).subscribe(\n      user => this.pendingUser.next(user),\n      error => {\n        if (error.status === 409) {\n          this.notyService.addError('User '+username+' is already registered, please use a different username');\n        } else if (error.status === 404) {\n          this.notyService.addError('Server is down, please try again later');\n        }\n      }\n    );\n  }\n\n  update(user:User) {\n    this.http.put<User>(this.userUrl+user.id,user).subscribe(\n      () => this.notyService.addSuccess('Updated user profile'),\n      error => this.notyService.addError('Could not update user profile')\n    );\n  }\n\n  list():Observable<User[]> {\n    return this.http.get<User[]>(this.userUrl);\n  }\n\n  logout() {\n    this.http.get<User>(this.userUrl+'logout').subscribe(\n      user => this.pendingUser.next(null),\n      error => this.pendingUser.next(null)\n    );\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}