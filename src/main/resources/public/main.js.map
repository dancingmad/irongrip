{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/kat/kat.component.css","webpack:///./src/app/kat/kat.component.html","webpack:///./src/app/kat/kat.component.ts","webpack:///./src/app/katlist/katlist.component.css","webpack:///./src/app/katlist/katlist.component.html","webpack:///./src/app/katlist/katlist.component.ts","webpack:///./src/app/mapselector/mapselector.component.css","webpack:///./src/app/mapselector/mapselector.component.html","webpack:///./src/app/mapselector/mapselector.component.ts","webpack:///./src/app/service/katwarn.service.ts","webpack:///./src/app/service/katwarning.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {KatComponent} from '../kat/kat.component';\nimport {KatlistComponent} from '../katlist/katlist.component';\n\n\nconst routes: Routes = [\n  { path: 'kat/:id' , component: KatComponent },\n  { path: 'list' , component: KatlistComponent },\n  { path: '', redirectTo: '/list', pathMatch: 'full'}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark fixed-top bg-dark shadow\\\">\\n      <h2 class=\\\"text-light\\\">Unwetter Warnungen</h2>\\n</nav>\\n  <div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <nav class=\\\"col-6 d-none d-md-block bg-light sidebar\\\"><app-mapselector></app-mapselector></nav>\\n    <main class=\\\"col-md-6 ml-sm-auto col-lg-6 px-6\\\"><router-outlet></router-outlet></main>\\n  </div>\\n  </div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MapselectorComponent } from './mapselector/mapselector.component';\nimport { KatlistComponent } from './katlist/katlist.component';\nimport { KatComponent } from './kat/kat.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport {TooltipModule} from 'ngx-bootstrap';\nimport { setTheme } from 'ngx-bootstrap/utils';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapselectorComponent,\n    KatlistComponent,\n    KatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    TooltipModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  constructor() {\n    setTheme('bs4');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">ID</div><div class=\\\"col-6\\\">{{katWarning.id}}</div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">Typ</div><div class=\\\"col-6\\\">\\n    <select [(ngModel)]=\\\"katWarning.type\\\" id=\\\"type\\\">\\n      <option value=\\\"\\\">None</option>\\n      <option value=\\\"default\\\">Default</option>\\n    </select>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"katWarning.type=='default'\\\">\\n  <div class=\\\"col-9 offset-2\\\">\\n      In der Zeit zwischen <input class=\\\"mini-input\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"24\\\" [(ngModel)]=\\\"katWarning.fromTime\\\" maxlength=\\\"2\\\" name=\\\"fromTime\\\"> und <input maxlength=\\\"2\\\" class=\\\"mini-input\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"24\\\" [(ngModel)]=\\\"katWarning.toTime\\\" name=\\\"toTime\\\"> Uhr\\n      werden heute im südlichen Teil des Neusiedler Sees Windstärken über <input class=\\\"mini-input\\\" maxlength=\\\"3\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"300\\\" step=\\\"1\\\" [(ngModel)]=\\\"katWarning.expectedWind\\\" name=\\\"expectedWind\\\"> km/h erwartet.\\n      Derzeit beträgt die Windstärke <input class=\\\"mini-input\\\" type=\\\"number\\\" [(ngModel)]=\\\"katWarning.currentWind\\\" maxlength=\\\"3\\\" min=\\\"0\\\" max=\\\"300\\\" step=\\\".1\\\" name=\\\"currentWind\\\"> km/h.\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">Location</div><div class=\\\"col-6\\\">\\n  <select [(ngModel)]=\\\"katWarning.locationId\\\" id=\\\"locationId\\\">\\n    <option *ngFor=\\\"let location of availableLocations\\\" [ngValue]=\\\"location\\\">\\n      {{ location }}\\n    </option>\\n  </select>\\n</div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-6 offset-2\\\">\\n    <button class=\\\"btn btn-default\\\" *ngIf=\\\"katWarning.id\\\" (click)=\\\"update()\\\">Update</button>\\n    <button class=\\\"btn btn-default\\\" *ngIf=\\\"katWarning.id\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    <button class=\\\"btn btn-default\\\" *ngIf=\\\"!katWarning.id\\\" (click)=\\\"create()\\\">Create</button>\\n    <button class=\\\"btn btn-default\\\" routerLink=\\\"/list\\\">Close</button>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {KatwarnService} from '../service/katwarn.service';\nimport {KatWarning} from '../service/katwarning';\n\n@Component({\n  selector: 'app-kat',\n  templateUrl: './kat.component.html',\n  styleUrls: ['./kat.component.css']\n})\nexport class KatComponent implements OnInit {\n\n  locations: string[] = [\n    'Mörbisch',\n    'Rust',\n    'Eisenstadt'\n  ];\n\n  katWarning: KatWarning = new KatWarning();\n  availableLocations: string[] = [];\n\n  constructor(private route: ActivatedRoute,\n              private location: Location,\n              private katwarnService: KatwarnService) {\n  }\n\n  ngOnInit() {\n    this.getKatWarning();\n  }\n\n  getKatWarning() {\n    const param = this.route.snapshot.paramMap.get('id');\n    const id = +param;\n    if (id >= 0) {\n      this.katwarnService.getKatWarning(id)\n        .subscribe(katwarn => {\n          this.katWarning = katwarn;\n          this.getAvailableLocations(this.katWarning.locationId);\n        });\n    } else {\n      this.getAvailableLocations('');\n    }\n  }\n\n  getAvailableLocations(selectedLocationId) {\n    this.katwarnService.getKatWarnings().subscribe(\n      katWarnings => {\n        const existingLocations = katWarnings.map(warn => warn.locationId);\n        this.availableLocations = [];\n        this.locations.forEach(location => {\n           if (existingLocations.indexOf(location) < 0 || location === selectedLocationId) {\n            this.availableLocations.push(location);\n          }\n        });\n      }\n    );\n  }\n\n  update() {\n    this.katwarnService.updateKatWarning(this.katWarning);\n  }\n\n  cancel() {\n    this.katwarnService.deleteKatWarning(this.katWarning);\n  }\n\n  create() {\n    this.katwarnService.createKatWarning(this.katWarning).subscribe(\n      katWarn => this.katWarning = katWarn\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"list-group\\\">\\n      <button type=\\\"button\\\" routerLink=\\\"/kat/{{katwarn.id}}\\\" *ngFor=\\\"let katwarn of katWarnings\\\" class=\\\"list-group-item\\\">\\n        {{parseWarning(katwarn)}}\\n      </button>\\n     <button type=\\\"button\\\" *ngIf=\\\"!katWarnings\\\" class=\\\"list-group-item disabled\\\" href=\\\"#\\\">Keine aktuellen Warnungen</button>\\n     <button type=\\\"button\\\" routerLink=\\\"/kat/new\\\" class=\\\"list-group-item\\\">Neue Unwetterwarnung...</button>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {KatwarnService} from '../service/katwarn.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {KatWarning} from '../service/katwarning';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-katlist',\n  templateUrl: './katlist.component.html',\n  styleUrls: ['./katlist.component.css']\n})\nexport class KatlistComponent implements OnInit {\n\n  katWarnings: KatWarning[];\n\n  constructor(private katwarnService: KatwarnService) { }\n\n  ngOnInit() {\n    return this.katwarnService.getKatWarnings().subscribe(\n      katWarnings => this.katWarnings = katWarnings\n    );\n  }\n\n  getKatWarnings(): KatWarning[] {\n    return this.katWarnings;\n  }\n\n  parseWarning(katwarn: KatWarning) {\n    if (katwarn && katwarn.type === 'default') {\n      return `In der Zeit zwischen ${katwarn.fromTime} und ${katwarn.toTime} Uhr werden heute in ` +\n      ` ${katwarn.locationId} Windstärken über ${katwarn.expectedWind} km/h erwartet.`+\n        ` Derzeit beträgt die Windstärke ${katwarn.currentWind} km/h.`;\n    } else {\n      return '';\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-11 offset-1\\\">Map is here</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mapselector',\n  templateUrl: './mapselector.component.html',\n  styleUrls: ['./mapselector.component.css']\n})\nexport class MapselectorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {KatWarning} from './katwarning';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KatwarnService {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  private katwarnUrl = 'api/katwarn/';  // URL to web api\n\n  constructor(private http: HttpClient) { }\n\n  getKatWarnings(): Observable<KatWarning[]> {\n    return this.http.get<KatWarning[]>(this.katwarnUrl);\n  }\n\n  getKatWarning(id: number): Observable<KatWarning> {\n    const detailUrl = `${this.katwarnUrl}${id}`;\n    return this.http.get<KatWarning>(detailUrl);\n  }\n\n  updateKatWarning(katWarning: KatWarning) {\n     // do update\n    const warningUrl = `${this.katwarnUrl}${katWarning.id}`;\n    this.http.put<KatWarning>(warningUrl, katWarning).subscribe();\n  }\n\n  createKatWarning(katWarning: KatWarning): Observable<KatWarning> {\n    const detailUrl = `${this.katwarnUrl}`;\n    return this.http.post<KatWarning>(this.katwarnUrl, katWarning);\n  }\n\n  deleteKatWarning(katWarning: KatWarning) {\n    const detailUrl = `${this.katwarnUrl}${katWarning.id}`;\n    this.http.delete<KatWarning>(detailUrl).subscribe();\n  }\n}\n","export class KatWarning {\n  id: number;\n\n  type: string;\n\n  fromTime: number;\n  toTime: number;\n\n  expectedWind: number;\n  currentWind: number;\n\n  locationId: string;\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}